{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\react-conversational-form-example\\\\src\\\\myForm.js\";\nimport React from 'react';\nimport { ConversationalForm } from 'conversational-form';\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [// Question 1\n    {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_colour',\n      'cf-questions': 'What is the natural color of your hair?',\n      'cf-label': 'Black',\n      'cf-image': 'https://edenhairextensions.com.au/wp-content/uploads/2017/06/products-1_JET_BLACK_06d870da-50ae-4000-acb1-0bdd64cb33ea.jpg'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_colour',\n      'cf-questions': 'What is the natural color of your hair?',\n      'cf-label': 'Brown',\n      'cf-image': 'https://edenhairextensions.com.au/wp-content/uploads/2017/06/products-6CHESTNUT_fefc6912-da6a-433d-9a13-44a943c726ef.jpg'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_colour',\n      'cf-questions': 'What is the natural color of your hair?',\n      'cf-label': 'Blonde',\n      'cf-image': 'https://edenhairextensions.com.au/wp-content/uploads/2017/06/products-613_BLEACHED_BLONDE_f1bce279-c1bc-465e-b0a3-b2b7258def5b.jpg'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_colour',\n      'cf-questions': 'What is the natural color of your hair?',\n      'cf-label': 'Auburn',\n      'cf-image': 'https://www.clairol.com/m/master/products/new_swatches/00070018116758_m.png'\n    }, // Question 2\n    {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_texture',\n      'cf-questions': 'What is the natural texture of your hair?',\n      'cf-label': 'Wavy'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_texture',\n      'cf-questions': 'What is the natural texture of your hair?',\n      'cf-label': 'Straight'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'hair_texture',\n      'cf-questions': 'What is the natural texture of your hair?',\n      'cf-label': 'Coilly'\n    }, // Question 3\n    {\n      'tag': 'input',\n      'type': 'checkbox',\n      'name': 'hair_problems',\n      'cf-questions': 'Have you noticed any problems with your hair?',\n      'cf-label': 'Split Ends'\n    }, {\n      'tag': 'input',\n      'type': 'checkbox',\n      'name': 'hair_problems',\n      'cf-questions': 'Have you noticed any problems with your hair?',\n      'cf-label': 'Dandruff'\n    }, {\n      'tag': 'input',\n      'type': 'checkbox',\n      'name': 'hair_problems',\n      'cf-questions': 'Have you noticed any problems with your hair?',\n      'cf-label': 'Hair Fall'\n    }, {\n      'tag': 'input',\n      'type': 'checkbox',\n      'name': 'hair_problems',\n      'cf-questions': 'Have you noticed any problems with your hair?',\n      'cf-label': 'Hair Thinning'\n    }, {\n      'tag': 'input',\n      'type': 'checkbox',\n      'name': 'hair_problems',\n      'cf-questions': 'Have you noticed any problems with your hair?',\n      'cf-label': 'No problems'\n    }, // Question 4\n    {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'salon_frequency',\n      'cf-questions': 'How frequently do you visit a salon?',\n      'cf-label': 'Weekly'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'salon_frequency',\n      'cf-questions': 'How frequently do you visit a salon?',\n      'cf-label': 'Monthly'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'salon_frequency',\n      'cf-questions': 'How frequently do you visit a salon?',\n      'cf-label': 'Bi-Monthly'\n    }, // Question 5\n    {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'salon_money',\n      'cf-questions': 'How much money do you spend over one salon visit ?',\n      'cf-label': '< 100'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'salon_money',\n      'cf-questions': 'How much money do you spend over one salon visit ?',\n      'cf-label': '100 - 200'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'salon_money',\n      'cf-questions': 'How much money do you spend over one salon visit ?',\n      'cf-label': '200 - 500'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'visit_spend',\n      'cf-questions': 'How much do you roughly spend on a visit?',\n      'cf-label': '> 500'\n    }, // Question 6\n    {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'visit_spend',\n      'cf-questions': 'How much time do you spend over one salon visit including waiting time?',\n      'cf-label': '> 500'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'visit_spend',\n      'cf-questions': 'How much do you roughly spend on a visit?',\n      'cf-label': '100-200'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'visit_spend',\n      'cf-questions': 'How much do you roughly spend on a visit?',\n      'cf-label': '200-500'\n    }, {\n      'tag': 'input',\n      'type': 'radio',\n      'name': 'visit_spend',\n      'cf-questions': 'How much do you roughly spend on a visit?',\n      'cf-label': '>500'\n    }];\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        theme: 'dark',\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        showProgressBar: true // loadExternalStyleSheet: false\n\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n\n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    console.log(\"Formdata, obj:\", formDataSerialized);\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref => this.elem = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Downloads/react-conversational-form-example/src/myForm.js"],"names":["React","ConversationalForm","MyForm","Component","constructor","props","formFields","submitCallback","bind","componentDidMount","cf","startTheConversation","options","theme","preventAutoFocus","showProgressBar","tags","elem","appendChild","el","formDataSerialized","getFormData","console","log","addRobotChatResponse","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ConversationalForm } from 'conversational-form';\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [\n\n      // Question 1\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_colour',\n        'cf-questions': 'What is the natural color of your hair?',\n        'cf-label': 'Black',\n        'cf-image': 'https://edenhairextensions.com.au/wp-content/uploads/2017/06/products-1_JET_BLACK_06d870da-50ae-4000-acb1-0bdd64cb33ea.jpg'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_colour',\n        'cf-questions': 'What is the natural color of your hair?',\n        'cf-label': 'Brown',\n        'cf-image': 'https://edenhairextensions.com.au/wp-content/uploads/2017/06/products-6CHESTNUT_fefc6912-da6a-433d-9a13-44a943c726ef.jpg'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_colour',\n        'cf-questions': 'What is the natural color of your hair?',\n        'cf-label': 'Blonde',\n        'cf-image': 'https://edenhairextensions.com.au/wp-content/uploads/2017/06/products-613_BLEACHED_BLONDE_f1bce279-c1bc-465e-b0a3-b2b7258def5b.jpg'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_colour',\n        'cf-questions': 'What is the natural color of your hair?',\n        'cf-label': 'Auburn',\n        'cf-image': 'https://www.clairol.com/m/master/products/new_swatches/00070018116758_m.png'\n      },\n\n      // Question 2\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_texture',\n        'cf-questions': 'What is the natural texture of your hair?',\n        'cf-label': 'Wavy'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_texture',\n        'cf-questions': 'What is the natural texture of your hair?',\n        'cf-label': 'Straight'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'hair_texture',\n        'cf-questions': 'What is the natural texture of your hair?',\n        'cf-label': 'Coilly'\n      },\n\n      // Question 3\n      {\n        'tag': 'input',\n        'type': 'checkbox',\n        'name': 'hair_problems',\n        'cf-questions': 'Have you noticed any problems with your hair?',\n        'cf-label': 'Split Ends'\n      },\n      {\n        'tag': 'input',\n        'type': 'checkbox',\n        'name': 'hair_problems',\n        'cf-questions': 'Have you noticed any problems with your hair?',\n        'cf-label': 'Dandruff'\n      },\n      {\n        'tag': 'input',\n        'type': 'checkbox',\n        'name': 'hair_problems',\n        'cf-questions': 'Have you noticed any problems with your hair?',\n        'cf-label': 'Hair Fall'\n      },\n      {\n        'tag': 'input',\n        'type': 'checkbox',\n        'name': 'hair_problems',\n        'cf-questions': 'Have you noticed any problems with your hair?',\n        'cf-label': 'Hair Thinning'\n      },\n      {\n        'tag': 'input',\n        'type': 'checkbox',\n        'name': 'hair_problems',\n        'cf-questions': 'Have you noticed any problems with your hair?',\n        'cf-label': 'No problems'\n      },\n\n      // Question 4\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'salon_frequency',\n        'cf-questions': 'How frequently do you visit a salon?',\n        'cf-label': 'Weekly'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'salon_frequency',\n        'cf-questions': 'How frequently do you visit a salon?',\n        'cf-label': 'Monthly'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'salon_frequency',\n        'cf-questions': 'How frequently do you visit a salon?',\n        'cf-label': 'Bi-Monthly'\n      },\n\n      // Question 5\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'salon_money',\n        'cf-questions': 'How much money do you spend over one salon visit ?',\n        'cf-label': '< 100'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'salon_money',\n        'cf-questions': 'How much money do you spend over one salon visit ?',\n        'cf-label': '100 - 200'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'salon_money',\n        'cf-questions': 'How much money do you spend over one salon visit ?',\n        'cf-label': '200 - 500'\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'visit_spend',\n        'cf-questions': 'How much do you roughly spend on a visit?',\n        'cf-label': '> 500',\n      },\n\n      // Question 6\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'visit_spend',\n        'cf-questions': 'How much time do you spend over one salon visit including waiting time?',\n        'cf-label': '> 500',\n      },\n\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'visit_spend',\n        'cf-questions': 'How much do you roughly spend on a visit?',\n        'cf-label': '100-200',\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'visit_spend',\n        'cf-questions': 'How much do you roughly spend on a visit?',\n        'cf-label': '200-500',\n      },\n      {\n        'tag': 'input',\n        'type': 'radio',\n        'name': 'visit_spend',\n        'cf-questions': 'How much do you roughly spend on a visit?',\n        'cf-label': '>500',\n      },\n    ];\n    \n    this.submitCallback = this.submitCallback.bind(this);\n  }\n  \n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n\t      theme: 'dark',\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        showProgressBar: true\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n  \n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    console.log(\"Formdata, obj:\", formDataSerialized);\n    this.cf.addRobotChatResponse(\"You are done. Check the dev console for form data output.\")\n  }\n  \n  render() {\n    return (\n      <div>\n        <div\n          ref={ref => this.elem = ref}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}